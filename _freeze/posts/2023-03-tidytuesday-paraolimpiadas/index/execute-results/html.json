{
  "hash": "3f0a5b9dd7d613838ab4a4b102959a82",
  "result": {
    "markdown": "---\ntitle: \"#TidyTuesday: Explorando dados sobre as Paraolimpíadas\"\nauthor: \n  - \"Ianní Muliterno\" \ndate: \"2023-03-01\" \ncategories: \n# exemplo de categorias:\n  - \"Tidytuesday\"\n  - \"Análise exploratória\"\n  - \"Visualização de dados\"\n  - \"Modelagem\"\ntoc: true # isso habilita o sumário ao lado do post\nimage: \"images/logo.png\" # imagem usada na página inicial junto ao post\nbibliography: \"pacotes.bib\" # arquivo de bibliografia. Pode adicionar mais arquivos!\ndraft: false # enquanto estiver draft: true, o post é um rascunho\nknitr: \n  opts_chunk: \n    message: true\n    warning: false\n    echo: true\n    fig.align: 'center'\n---\n\n\n::: {.callout-note collapse=\"false\"}\n## Autoria\n\n<center>\n\n![Ianní Muliterno](images/ianni.jpg){style=\"width: 30%; border-radius: 50%;\"}\n\n[<i class=\"fab fa-github\"></i>](https://github.com/IanniMuliterno)\n[<i class=\"fab fa-linkedin\"></i>](https://www.linkedin.com/in/iannimuliterno/?originalSubdomain=br)\n\n</center>\n\nEste post foi escrito por Ianní Muliterno, um integrante da comunidade R-Ladies São Paulo! É graduado em Estatística pela Universidade Federal de Pernambuco (UFPE) e atua como cientista de dados na Unilever.\n:::\n\n\n\n\nOlá, pessoal!\n\nSe você já é um entusiasta de ciência de dados, provavelmente já ouviu falar do TidyTuesday. Se está iniciando, este é um ótimo lugar para conseguir dados reais para praticar e criar um portfolio. O tidytuesday é um projeto semanal do R for Data Science Community, que tem como objetivo ajudar as pessoas a aprender e praticar a análise de dados em R usando o pacote Tidyverse, conheça aqui: <https://github.com/rfordatascience/tidytuesday>. \n\nCada semana, é lançado um novo conjunto de dados, geralmente em formato de planilha, que pode ser baixado gratuitamente. A comunidade é então convidada a explorar, visualizar e analisar esses dados usando as ferramentas do `{tidyverse}`, como o `{ggplot2}` para gráficos e o `{dplyr}` para manipulação de dados. \n\n## Base de dados \n\nHoje vamos dar uma olhada na base do início de agosto de 2021, quando o TidyTuesday lançou um conjunto de dados fascinante sobre as **paraolimpíadas dos anos 1980 até 2016**. O conjunto de dados inclui informações sobre características dos atletas, o país de origem, o tipo de prova, entre outras variáveis. \n\n## Importação\n\nPara começar vamos carregar os dados! Lembrando de manter a boa prática de iniciar o script carregando as bibliotecas necessárias.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(readr)\nlibrary(ggplot2)\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndados_olimpiadas <- read_csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-08-03/athletes.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 19547 Columns: 10\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (8): gender, event, medal, athlete, abb, country, type, guide\ndbl (2): grp_id, year\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n\nO bacana da função `read_csv()` é que ela já dá uma descrição geral com nome das variáveis e tipo. No caso, temos 8 variáveis tipo `chr` ou `character` (textos) e 2 tipo `dbl` ou `double` (numéricos). \n\nAntes de começar, outra boa prática é conhecer os dados. Quais colunas possui? Como está o preenchimento das variáveis? Existem dados faltantes (NAs)?\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Quantos NAs temos em cada coluna?\ncolSums(is.na(dados_olimpiadas))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n gender   event   medal athlete     abb country  grp_id    type    year   guide \n    144       0       0     435      49   14428   14428       0       0   19494 \n```\n:::\n:::\n\n\nNo tidytuesday os dados costumam vir mais arrumados, porém no mundo real é comum encontrarmos erros no preenchimento, sejam eles sistemáticos (por exemplo: a ferramenta que mede velocidade dos competidores falha e traz valores muito grandes ou negativos), ou também erros de preenchimento (exemplo: alguém que preencheu errado o campo de medalha e colocou por exemplo \"metal\" ao invés de \"prata\").\n\nNo repositório desta base, está descrito o que cada coluna representa. Te convido para escrever como lição de casa o código que checa as variáveis categóricas em busca de nomes estranhos que não condizem com o que deveria estar naquela variável. Como incentivo, deixo aqui o check de variáveis **numéricas**. \n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndados_olimpiadas %>% \n  select(where(is.numeric)) %>%\n  pivot_longer(1:2, names_to = 'variaveis', values_to = 'valor') %>% \n  ggplot(aes(x = valor)) +\n  geom_histogram() +\n  facet_wrap(~variaveis,scales = 'free') +\n  theme(panel.background = element_rect(fill = \"white\")) \n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/check_numeric-1.png){fig-align='center' width=672}\n:::\n:::\n\n\n\n## Explorando e visualizando dados para Natação!\n\nPara não ficar um post massivo, vamos focar em **natação**.\n\nAo analisar esses dados, podemos responder várias perguntas interessantes. Por exemplo, qual país obteve mais medalhas na natação nos Jogos Olímpicos de 2021? Há alguma diferença significativa na quantidade de medalhas conquistadas entre os atletas homens e mulheres?\n\n\n### Países com mais metalhas\n\n\nPara criar um gráfico mostrando os países com mais medalhas, primeiro é necessário trabalhar os dados para criar uma base onde tenha a contagem de medalhas por país e por tipo de medalha!\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Fazendo uma contagem de medalhas de natação por país:\n\nparalympic_total <- dados_olimpiadas %>%\n  # Filtrando medalhas de natação (Swimming)\n  filter(type == \"Swimming\") %>%\n  # Contando quantas medalhas tem por país (abb),\n  # ordenando pelos maiores números!\n  count(abb, sort = TRUE)\n\n# Fazendo uma contagem de medalhas de natação por país e tipo de medalha:\nparalympic_byMedal <- dados_olimpiadas %>%\n  # Filtrando medalhas de natação (Swimming)\n  filter(type == \"Swimming\") %>%\n  # Contando quantas medalhas tem por país (abb) e tipo de medalha,\n  # ordenando pelos maiores números!\n  count(abb, medal) \n\nparalympic_swimming <- paralympic_byMedal %>%\n  # unindo as duas bases criadas acima, \n  # usando a coluna \"abb\" como chave\n  left_join(paralympic_total, by = \"abb\") %>%\n  # renomeando as colunas\n  rename(number = n.x, total_medals = n.y)\n\n# Uma \"olhada\" na base criada!\nparalympic_swimming |> \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 174\nColumns: 4\n$ abb          <chr> \"ARG\", \"ARG\", \"ARG\", \"AUS\", \"AUS\", \"AUS\", \"AUT\", \"AUT\", \"…\n$ medal        <chr> \"Bronze\", \"Gold\", \"Silver\", \"Bronze\", \"Gold\", \"Silver\", \"…\n$ number       <int> 9, 5, 10, 160, 147, 158, 2, 2, 4, 1, 7, 1, 13, 6, 12, 9, …\n$ total_medals <int> 24, 24, 24, 465, 465, 465, 8, 8, 8, 8, 8, 1, 31, 31, 31, …\n```\n:::\n:::\n\n\nUtilizando essa base com a contagem de medalhas, podemos filtrar os 5 países com mais medalhas:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntop5 <- paralympic_total |> \n  # fatiar: apenas as primeiras 5 linhas\n  slice(1:5) |> \n  # retornar como um vetor a coluna abb\n  pull(abb)\n\n\ntable_top5 <- paralympic_swimming %>%\n  # filtrar os países do top 5\n  filter(abb %in% top5) %>%\n  # transformar a coluna abb em fator, \n  # para facilitar a ordenação no gráfico\n  mutate(abb = factor(abb, levels = top5),\n         medal = factor(medal, levels = c(\"Bronze\", \"Silver\", \"Gold\"))) \n```\n:::\n\n\nCom os dados preparados, podemos fazer o gráfico! Mas antes disso, vamos salvar as configurações de tema do gráfico em um objeto, para utilizarmos depois e deixar o código do gráfico mais fácil para ler!\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntema_olimpiadas <- \n    theme_minimal() +\n  theme(\n    legend.position = \"none\",\n    plot.title.position = \"plot\",\n    plot.title = element_text(\n      family = \"mono\",\n      face = \"bold\",\n      size = 10\n    ),\n    panel.grid.major.x = element_blank(),\n    panel.grid.minor.x = element_blank(),\n    panel.grid.major.y = element_blank(),\n    panel.grid.minor.y = element_blank(),\n    axis.text = element_text(\n      family = \"mono\",\n      face = \"bold\",\n      size = 8\n    ),\n    panel.background = element_rect(fill = \"white\")\n  ) \n```\n:::\n\n\nAgora sim, vamos ao gráfico!\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntable_top5 %>%\n  ggplot(aes(x = abb, y = number, fill = medal)) +\n  geom_col() +\n  scale_fill_manual(values = c(\"#D89581\",  \"#C0C0C0\", \"#D4AF37\")) +\n  scale_x_discrete(expand = c(0, 0)) +\n  labs(x = \"\",\n       y = \"\", \n       title = \"Medalhas de ouro, prata e bronze conquistada pelos países de melhor desempenho\") +\n  tema_olimpiadas\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/medalhas-1.png){fig-align='center' width=672}\n:::\n:::\n\nA Grã-Bretanha é o país com mais medalhas no total, porém os Estados Unidos é o país com mais medalhas de ouro!\n\nApesar de algumas alterações que fiz, os créditos deste gráfico de barras são da `Erin`, professora que vocês podem encontrar aqui: <https://github.com/efranke22>. \n\n### Diferença de medalhas por gênero\n\nContinuando, podemos ver a diferença entre a quantidade de medalhas conquistadas entre os atletas homens e mulheres. Para isso, veremos primeiro o histograma do percentual de mulheres que os países levam em cada olimpíada, em seguida o box plot das medalhas conquistadas por cada um, agrupado também pelo tipo de medalha.\n\nUma observação: o gênero misto foi removido, porque ele está na base devido a algumas provas serem mistas e não porque os participantes são não-binários. Com isso, perdemos 21 linhas. \n\nVamos então preparar a base de dados, calculando o percentual de mulheres por país:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndt_perc_gender <- dados_olimpiadas %>%\n  # Filtrar para Natação\n  filter(type == \"Swimming\") %>%\n  # Filtrar: remover linhas onde o gênero seja \"misto\" (ex: duplas de homens e mulheres)\n  filter(gender != 'Mixed') %>%\n  # Deixar apenas uma linha para a combinação atleta/ano/país/gênero\n  distinct(abb, year, gender, athlete) %>%\n  # Contar quantas pessoas participaram por país e gênero\n  count(abb, gender) %>%\n  # Alterar a base para formato longo\n  pivot_wider(names_from  = gender, values_from = n) %>%\n  # Substituir NA por 0 nas colunas Woman e Men\n  mutate(across(any_of(c(\"Women\", \"Men\")), ~ ifelse(is.na(.), 0, .))) %>%\n  # Agrupar por país\n  group_by(abb) %>%\n  # Calcular o porcentual de mulheres\n  summarize(perc_mulheres = mean(Women / (Women + Men))) %>%\n  # Ordenar de forma decrescente por perc_mulheres\n  arrange(desc(perc_mulheres))\n\nlinha_mediana <- median(dt_perc_gender$perc_mulheres)\n```\n:::\n\n\nAgora podemos criar o histograma:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndt_perc_gender %>%\n  ggplot(aes(x = perc_mulheres)) +\n  geom_histogram() +\n  geom_vline(\n    mapping = aes(xintercept = linha_mediana),\n    linetype = 2,\n    color = 'red'\n  ) +\n  annotate(\n    \"text\",\n    x = linha_mediana + 0.06,\n    y = 15,\n    label = \"Mediana\",\n    color = 'red'\n  ) +\n  ggtitle(\"Histograma do percentual de mulheres que os países levam em cada olimpíada\") +\n  theme(panel.background = element_rect(fill = \"white\")) \n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){fig-align='center' width=672}\n:::\n:::\n\n\nComo vimos no histograma, muitos países nem enviam mulheres para as olimpíadas e os que enviam, tem em média 34% de mulheres na composição do time. Sendo assim, essa diferença impacta na diferença que vemos na quantidade de medalhas conquistadas por gênero. \n\nVamos explorar estes dados em um boxplot:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndados_olimpiadas %>%\n  mutate(medal = factor(medal, levels = c(\"Bronze\", \"Silver\", \"Gold\"))) |> \n    # Filtrar para Natação\n  filter(type == \"Swimming\") %>%\n  # Filtrar: remover linhas onde o gênero seja \"misto\"\n  filter(gender != 'Mixed') %>%\n  # Contar quantas pessoas participaram por país, gênero e tipo de medalha\n  count(abb, gender, medal) %>%\n  ggplot(aes(y = n, fill = gender, x = medal)) +\n  geom_boxplot() +\n  labs(title = \"Box-plot das medalhas conquistadas por tipo de medalha e gênero em cada país\", \n       y = \"Quantidade de medalhas\",\n       x = \"Tipo de medalha\",\n       fill = \"Gênero\") +\n  theme(panel.background = element_rect(fill = \"white\")) +\n  scale_fill_brewer(type = \"qual\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){fig-align='center' width=672}\n:::\n:::\n\n\n## Vamos para a modelagem!\n\nAgora, pensando em usar modelos, podemos brincar de criar métricas, pensando em como prever se um atleta conquistará medalhas na olimpíada seguinte. Opções diretas de variáveis são: quantas medalhas já ganhou, de quantas olimpíadas já participou, proporção de medalhas por tipo, e uma métrica de quantidade de medalhas por olimpíada (chamarei de medal_olympics_kpi - kpi vem do inglês *Key Performance Indicators* e é uma sigla bem conhecida no meio da análise de dados para se referir a indicadores de performance), por fim, teremos a variável de gênero.\n\nUm exercício bom de fazer aqui é observar correlação entre as variáveis resposta. As contagens de medalhas são correlacionadas entre si, pois por exemplo, quanto mais medalhas ganhas no total, maior serão os valores nas contagens de medalha por tipo, por isso que decidi utilizar proporção. A quantidade de olimpíadas que o atleta já participou também tem certa relação com sua idade, o que é bom, porque não temos a informação da idade na base.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# variável resposta : última olimpíada de cada atleta\nresposta <- dados_olimpiadas %>%\n  # Remover linhas onde não temos o nome do atleta\n  filter(athlete != '-') %>%\n  # Filtrar para natação\n  filter(type == \"Swimming\") %>%\n  # Filtrar por ano\n  filter(year == 2016) %>%\n  # Contar quantas medalhas cada atleta teve\n  count(athlete, sort = TRUE) \n```\n:::\n\n\nA variável resposta é a quantidade de medalhas conquistadas por atleta nas olimpíadas de natação de 2016. A base vai contar com informações dos atletas e das suas participações anteriores.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nbase <- dados_olimpiadas %>%\n  # Unindo a tabela resposta a base total para manter apenas \n  # os atletas dos quais conseguimos montar variável resposta\n  inner_join(resposta, by = 'athlete') %>%\n  # Removendo dados de 2016 (pois deste ano tiramos a variável resposta)\n  filter(year != 2016) %>%\n  # Remove a coluna n (que veio ao juntar as bases)\n  select(-n) %>% \n  # agrupando por atleta\n  group_by(athlete) %>% \n  # montando variáveis independentes para cada atleta\n  summarize(total_medalhas = n(),\n            ouro = sum(medal == 'Gold'),\n            prata = sum(medal == 'Silver'),\n            bronze = sum(medal == 'Bronze'),\n            total_olympics = n_distinct(year),\n            medal_olympics_kpi = n()/n_distinct(year),\n            gender = unique(gender[gender != 'Mixed']),\n            n_eventos = n_distinct(event)) %>% \n  mutate(ouro = ouro/total_medalhas,\n         prata = prata/total_medalhas,\n         bronze = bronze/total_medalhas)\n\nbase_final <- base %>% \n  # unir novamente com a base de resposta\n  inner_join(resposta, by = 'athlete') %>% \n  # renomear coluna n para y\n  rename(y = n) %>% \n  # desagrupar\n  ungroup() %>% \n  # remover a coluna com nome\n  select(-athlete)\n```\n:::\n\n\nCom isto estamos prontos para checar o quanto essas variáveis podem prever quantas medalhas um atleta conquistará em 2016. Por se tratar de uma variável resposta de contagem, não é adequado usar uma regressão linear simples, duas alternativas são modelos de poisson e binomial negativa. Aqui utilizaremos um modelo de poisson.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmodelo <- glm(y ~ ., data = base_final, family = 'poisson')\nsummary(modelo)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nglm(formula = y ~ ., family = \"poisson\", data = base_final)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-2.03793  -0.59747  -0.07415   0.46524   1.76581  \n\nCoefficients: (1 not defined because of singularities)\n                   Estimate Std. Error z value Pr(>|z|)  \n(Intercept)         0.31605    0.36604   0.863   0.3879  \ntotal_medalhas     -0.01995    0.05408  -0.369   0.7122  \nouro                0.19491    0.22641   0.861   0.3893  \nprata               0.14087    0.26165   0.538   0.5903  \nbronze                   NA         NA      NA       NA  \ntotal_olympics     -0.21896    0.18431  -1.188   0.2348  \nmedal_olympics_kpi  0.28235    0.13744   2.054   0.0399 *\ngenderWomen         0.19268    0.12956   1.487   0.1370  \nn_eventos           0.01706    0.12647   0.135   0.8927  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 111.157  on 106  degrees of freedom\nResidual deviance:  59.115  on  99  degrees of freedom\nAIC: 355.94\n\nNumber of Fisher Scoring iterations: 4\n```\n:::\n:::\n\n\nAqui observamos pela coluna `Pr(>|z|)` o p-valor de cada variável. Por padrão, quando este valor é `<= 0.10` aparece um símbolo chamado _Signif. codes_ a direita. Quanto menor o p-valor, maior esse símbolo, ou seja, quanto maior a importância da variável, maior o símbolo. \n\nPelo `summary(modelo)` descobrimos que a proporção de medalhas de bronze não está gerando nenhum resultado para predição do modelo, por isso os campos em `NA` aparecem para ela.\n\nDaqui para frente, por se tratar de um modelo com poucas variáveis e um exemplo simples, fui criando novos modelos, onde em cada um deles removia uma variável. Primeiro `bronze`, depois `n_eventos` e assim por diante. A cada novo modelo eu chequei qual a variável de menor importância, ou seja, maior p-valor e removo-a, isto é importante porque cada remoção vai impactar na importância de todas as outras. No fim, quando cheguei num modelo onde todas as variáveis eram relevantes, obtive o seguinte modelo:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmodelo5 <-\n  glm(y ~ medal_olympics_kpi + total_olympics,\n      data = base_final,\n      family = 'poisson')\nsummary(modelo5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nglm(formula = y ~ medal_olympics_kpi + total_olympics, family = \"poisson\", \n    data = base_final)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-1.84737  -0.69446  -0.09312   0.45457   1.68875  \n\nCoefficients:\n                   Estimate Std. Error z value Pr(>|z|)    \n(Intercept)         0.64174    0.15547   4.128 3.66e-05 ***\nmedal_olympics_kpi  0.26467    0.03805   6.956 3.49e-12 ***\ntotal_olympics     -0.28385    0.08063  -3.521 0.000431 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 111.157  on 106  degrees of freedom\nResidual deviance:  61.791  on 104  degrees of freedom\nAIC: 348.61\n\nNumber of Fisher Scoring iterations: 4\n```\n:::\n:::\n\n\nObserve que temos o kpi com influência positiva, ou seja, quanto mais medalhas por olimpíada um atleta tem em olimpíadas anteriores, mais medalhas ele pode conseguir em 2016. Do contrário temos a variável `total_olympics` que tem influência negativa, ou seja, quanto mais olimpíadas o atleta tiver participado, menos medalhas ele pode ganhar em 2016. Essa interpretação pode parecer estranha, mas lembre-se da sua relação com a idade, quanto mais olimpíadas nas costas, mais velho o atleta é. \n\nAgora vamos buscar evidências do poder de predição do modelo, no próprio `summary(model)` temos o `AIC`, uma métrica que fica menor a medida que o poder de predição melhora. Se compararmos o AIC do primeiro e do último modelo, vemos uma diminuição, mas precisamos verificar os resíduos por exemplo.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(modelo5, aes(x = .fitted, y = .resid)) +\n  geom_point() +\n  geom_hline(yintercept = 0) +\n  ggtitle(\"Gráfico de resíduos versus valor predito\") +\n  theme(panel.background = element_rect(fill = \"white\"))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){fig-align='center' width=672}\n:::\n:::\n\n\nQuando plotamos o gráfico de resíduos versus os valores preditos, a distribuição deveria ser aleatória em torno de 0, mas vemos que existe certa tendência, o que demonstra que o modelo precisa de melhorias. No nosso caso, mais observações e variáveis, provavelmente matariam a charada. \n\n**ALERTAAAA: A partir daqui, a leitura é recomendada para quem já tem conhecimento de regressão linear simples. **\n\n*Conhecedores de LM e dispostos a ler, venham comigo!* \n\nUm outro meio de checar a bondade do ajuste de _um modelo poisson_, é usar o desvio residual. Ele é similar a soma de quadrado dos resíduos que vemos na regressão linear, é calculada como a diferença entre o desvio dos valores preditos do modelo e o desvio do modelo nulo, que é o modelo que contém apenas o intercepto: `residual deviance = deviance(fitted_model) - deviance(null_model)`. \n\nO desvio residual mede quanto de variabilidade dos dados não pode ser explicada depois de considerar o efeito dos preditores. Um desvio residual mais baixo, indica um melhor ajuste. Em geral, um desvio residual que é muito menor que os graus de liberdade do modelo, sugerem um bom ajuste. Os graus de liberdade de uma regressão poisson são iguais ao número de observações menos o número de coeficientes estimados. \n\nPodemos usar o desvio residual para rodar um teste de ajuste para regressão poisson. A hipótese nula diz que o modelo se ajusta bem aos dados, a alternativa diz o contrário. O teste estatístico de desvio residual e o p-valor, são calculados com base na distribuição qui-quadrado com graus de liberdade iguais a diferença entre os graus de liberdade do modelo ajustado e o modelo nulo.\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nexpected <- fitted(modelo5)\n\n# Calculate the Pearson's chi-squared statistic and p-value\npearson_chisq <- sum((base_final$y - expected)^2 / expected)\np_value <- 1 - pchisq(pearson_chisq, df = df.residual(modelo5))\n\n# Display the results\ncat(\"Pearson's chi-squared test:\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nPearson's chi-squared test:\n```\n:::\n\n```{.r .cell-code}\ncat(\"X-squared = \", pearson_chisq, \", df = \", df.residual(modelo5), \", p-value = \", p_value, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nX-squared =  62.90335 , df =  104 , p-value =  0.9995126 \n```\n:::\n:::\n\n\nO p-valor alto indica que *não* há evidência de falta de ajuste, juntando tudo que vimos sobre precisão do modelo, podemos concluir que \"estamos no caminho certo para modelar a nossa variável resposta, mas o modelo carece de melhorias\". Uma base maior, além de melhorar a precisão como já mencionei, nos permitiria separar um grupo de teste onde poderíamos ter uma noção mais clara do quão bem o modelo prevê a partir de entradas inéditas. \n\nAgora sim, me despeço oficialmente, quem quiser saber mais sobre o modelo de poisson, segue uma ótima referência!\n\nRegressão Poisson: <https://online.stat.psu.edu/stat462/node/209/>\n\n## Concluindo\n\nEssa foi uma breve demonstração do quanto o Tidytuesday é interessante e como podemos praticar nossas habilidades em tratamento de dados e análise. Esperamos que este artigo tenha inspirado você a explorar o mundo do TidyTuesday, e colocar a mão na massa no R, usando essa fonte de dados incrível para aprimorar suas habilidades em ciência de dados. Lembre-se que a comunidade tá aqui para te ajudar a alcançar seu objetivo em ciência de dados!\n\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\n\n\n<!-- inicio font awesome -->\n\n\n```{=html}\n<script src=\"https://kit.fontawesome.com/1f72d6921a.js\" crossorigin=\"anonymous\"></script>\n```\n\n<!-- final font awesome -->\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}